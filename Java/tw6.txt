/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package testspace;

/**
 *
 * @author Veteran
 */


class BankAccount {

    private double balance = 0;

    public BankAccount(double initialbalance) {
        this.balance = initialbalance;
    }

    public synchronized void deposit(double amt) throws InterruptedException{
        this.balance += amt;
        System.out.println("Deposited " + amt + " in account");
        notify();
    }

    public synchronized void withdraw(double amt) throws InterruptedException {
        while (this.balance < amt) {
            System.out.println("Insufficient amount");
            wait();
        }
        this.balance -= amt;
        System.out.println("Withdrawed amount " + amt);
        notifyAll();
    }

    public synchronized double getBalance() {
        return this.balance;

    }
}

public class TestSpace {

    public static void main(String[] args) {
        BankAccount account = new BankAccount(1000);
        Thread depositThread = new Thread(() ->{  
            try{
            account.deposit(200);
            }catch(InterruptedException e){
            e.printStackTrace();
            }
        });
        Thread withdrawThread=new Thread(()->{
            try{
        account.withdraw(700);
            }catch(InterruptedException e){
            e.printStackTrace();
            }
        });
        
        depositThread.start();
        withdrawThread.start();
        
        try{
        depositThread.join();
        withdrawThread.join();
        }catch(Exception e){
        e.printStackTrace();
        }
        
        System.out.println("Balance is "+account.getBalance());
    }

}
